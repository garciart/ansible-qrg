---
# tasks file for demo_role
- name: Test ping
  ansible.builtin.ping:

# - name: Test v2_runner_on_failed
#   ansible.builtin.fail:
#     msg: "I failed this task on purpose."
#   when: >-
#     inventory_hostname == 'managed_node1'
#   retries: 3

- name: Show a greeting
  vars:
    task_var: "I am a task-level variable."
  ansible.builtin.debug:
    msg: "Hello from the role!"

# - name: Include a task
#   ansible.builtin.include_tasks:
#     file: sub_tasks.yml

# - name: Loop over a list of items directly
#   ansible.builtin.debug:
#     msg: "{{ item }} is a planet."
#   when: item != "Phobos" and item != "Deimos"
#   loop:
#     - "Mercury"
#     - "Venus"
#     - "Earth"
#     - "Mars"
#     - "Phobos"
#     - "Jupiter"
#     - "Saturn"
#     - "Deimos"
#     - "Uranus"
#     - "Neptune"

# - name: Run handler
#   ansible.builtin.command: ls
#   changed_when: false

# - name: Test cleanup
#   block:
#     - name: Test v2_runner_on_failed  # noqa ignore-errors
#       ansible.builtin.fail:
#         msg: "I failed this task on purpose."
#       # ignore_errors: true

#   rescue:
#     - name: Rescue task
#       ansible.builtin.debug:
#         msg: "I'm rescued!"

#   always:
#     - name: Always task
#       ansible.builtin.debug:
#         msg: "I'm always!"

# - name: Test v2_runner_on_ok
#   ansible.builtin.debug:
#     msg: "I'm OK!"

# - name: Test v2_runner_on_skipped
#   ansible.builtin.debug:
#     msg: "I skipped this task."
#   when: false

# - name: Test v2_runner_on_unreachable
#   ansible.builtin.ping:
#   # when: "inventory_hostname == 'unreachable'"
#   delegate_to: bob
#   ignore_unreachable: true

# - name: Test diff
#   block:
#     - name: Create an empty file
#       ansible.builtin.file:
#         path: empty_file.txt
#         state: touch
#         # Allow read and write
#         mode: '0644'

#     - name: Delete files
#       ansible.builtin.file:
#         path: empty_file.txt
#         state: absent

- name: Test async
  block:
    - name: Simulate long running op (15 sec), wait for up to 45 sec, poll every 5 sec
      ansible.builtin.command: /bin/sleep 16
      async: 45
      poll: 5
      changed_when: false
...
# code: language=ansible
# vi: set noai nu ts=2 sw=2 sts=2 sta et:
