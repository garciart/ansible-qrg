---
# Read data from files into a YAML variable
# Usage: ansible-playbook convert_file_data.yml
- name: Get file data
  hosts: localhost
  tasks:
    - name: Read data from an INI file into a YAML variable
      block:
        - name: Read file
          ansible.builtin.slurp:
            src: data_files/planets_info.ini
          register: raw_data

        - name: Decode contents, format, and store in a variable
          # Append an opening brace to the start of the text
          # Decode content
          # Remove any comments
          # Remove blank lines
          # Trim whitespace
          # Replace empty values with 'null' (moons=)
          # Convert comma-delimited values that are not in list-format to a list
          # (moons = "Phobos", "Deimos" to moons = ["Phobos", "Deimos"])
          # Enclose section data within braces
          # Replace '=' with ':'
          # Quote keys, including keys that hold objects ("mercury: {")
          # Quote values
          # Remove any double quoted strings (""Mercury"")
          # Unquote boolean and null values (true, false, and null)
          # Remove newlines between braces and data to avoid trailing commas
          # Replace newlines with commas
          # Append a closing brace to the end of the text
          ansible.builtin.set_fact:
            result: >-
              {{
                '{' ~ (
                  raw_data.content
                  | b64decode
                  | regex_replace('(^[;#]).*?(?=\n)', '', multiline=true)
                  | regex_replace('\n{2,}', '\n')
                  | trim
                  | regex_replace('=\n', '= null\n')
                  | regex_replace('=((\s*)([^\[])(.*)("\s*,)(.*)("\s*))\n', '=[\1]\n')
                  | regex_replace('(^\[)(.*)(\])([\S\s]*?(?=(^\[|\Z)))', '\2: {\4},', multiline=true)
                  | regex_replace('(\s*)=(\s*)', ':')
                  | regex_replace('([a-zA-Z_]+)(\s*)(:)', '"\1":')
                  | regex_replace('(:)(\s*)([a-zA-Z_]+)', ':"\3"')
                  | replace('""', '"')
                  | replace('"true"', 'true')
                  | replace('"false"', 'false')
                  | replace('"null"', 'null')
                  | regex_replace('{\n', '{')
                  | regex_replace('\n}', '}')
                  | regex_replace('\n', ', ')

                ) ~ '}'
              }}

        - name: Show variable contents, type and single element
          ansible.builtin.debug:
            msg:
              - "{{ result }}"
              - "{{ result | type_debug }}"
              # - "{{ planets['earth'] }}"

        # - name: Finish converting data to JSON
        #   ansible.builtin.set_fact:
        #     planets: "{{ '{' ~ result ~ '}' }}"

        # - name: Show variable contents, type and single element
        #   ansible.builtin.debug:
        #     msg:
        #       - "{{ planets }}"
        #       - "{{ planets | type_debug }}"
        #       # - "{{ planets['earth'] }}"
...
# code: language=ansible
# vi: set noai nu ts=2 sw=2 sts=2 sta et:
